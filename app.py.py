# -*- coding: utf-8 -*-
"""Despliegue.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IS5hUEn8e11u5jKFC4SsJNaIe4vdRCG-
"""

# Despliegue

#- Cargamos el modelo
#- Cargamos los datos futuros (datos-futuros.xlsx)
#- Preparar los datos futuros
#- Aplicamos el modelo para la predicción

#Importamos librerías básicas
import pandas as pd # manipulacion dataframes
import numpy as np  # matrices y vectores
import matplotlib.pyplot as plt #gráfica

#Cargamos el modelo
import pickle
filename = 'modelo-clas-hiper.pkl'
best_rf, labelencoder,variables, scaler= pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros (SE COMENTAN LAS DOS LINEAS DESPUES DE ESTE COMENTARIO UNA VEZ CULMINADO TODO EL PROCESO)
#data = pd.read_excel("datos-futuros.xlsx")
#data.head()

#Se crea interfaz gráfica con streamlit para capturar los datos
# NO SE EJECUTA
#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.title("Predicción de contratación de estudiantes")

# Campos según el dataset
gender = st.selectbox('Género', ['M', 'F'])
ssc_p = st.number_input('Porcentaje SSC (secundaria)', min_value=0.0, max_value=100.0, value=70.0)
hsc_p = st.number_input('Porcentaje HSC (preparatoria)', min_value=0.0, max_value=100.0, value=65.0)
degree_p = st.number_input('Porcentaje en grado universitario', min_value=0.0, max_value=100.0, value=68.0)
workex = st.selectbox('¿Tiene experiencia laboral?', ['Yes', 'No'])
etest_p = st.number_input('Puntaje de examen de empleabilidad', min_value=0.0, max_value=100.0, value=60.0)
specialisation = st.selectbox('Especialización en MBA', ['Mkt&HR', 'Mkt&Fin'])
mba_p = st.number_input('Porcentaje en MBA', min_value=0.0, max_value=100.0, value=70.0)

datos = [[gender, ssc_p, hsc_p, degree_p, workex, etest_p, specialisation, mba_p]]
data = pd.DataFrame(datos, columns=['gender', 'ssc_p', 'hsc_p', 'degree_p', 'workex', 'etest_p', 'specialisation', 'mba_p'])

#Se realiza la preparación debe ser igual al aprendizaje
data_preparada=data.copy()
data_preparada = pd.get_dummies(data_preparada, columns=['gender'], drop_first=True, dtype=int)
data_preparada = pd.get_dummies(data_preparada, columns=['workex'], drop_first=True, dtype=int)
data_preparada = pd.get_dummies(data_preparada, columns=['specialisation'], drop_first=True, dtype=int)
data_preparada.head()

#Hacemos la predicción con Ranfom Forest
Y_fut = best_rf.predict(data_preparada)
data['RF']=labelencoder.inverse_transform(Y_fut)
data.head()

data #Mostrar las predicciones